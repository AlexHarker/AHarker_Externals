<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<?xml-stylesheet href='./_c74_ref.xsl' type='text/xsl'?>
<c74object name="rbiquad~" module="AHarker Externals" category="sample accurate suite">
  <digest>
      Biquad filter with sample-accurate reset
  </digest>
  <description>
      <o>rbiquad~</o> is a biquad filter that accepts only signal rate coefficients. The memory can be cleared on a sample-accurate basis, using a dedicated reset input. In granular applications with filtering per voice this allows correct reset of the filter before each new grain.
  </description>
  <methodlist>
      <method name="First-inlet">
          <arglist>
              <arg name="First-inlet" type="signal" />
          </arglist>
          <digest>
              The audio input to be filtered
          </digest>
          <description>
              The first inlet takes an audio <m>signal</m> to be filtered.
          </description>
      </method>
      <method name="Second-inlet">
          <arglist>
              <arg name="Second-inlet" type="signal" />
          </arglist>
          <digest>
              FF coefficient 0
          </digest>
          <description>
              The second inlet takes the 0th FF coefficient (this can be generated using <o>filtercoeff~</o>).
          </description>
      </method>
      <method name="Third-inlet">
          <arglist>
              <arg name="Third-inlet" type="signal" />
          </arglist>
          <digest>
              FF coefficient 1
          </digest>
          <description>
              The third inlet takes the 1st FF coefficient (this can be generated using <o>filtercoeff~</o>).
          </description>
      </method>
      <method name="Fourth-inlet">
          <arglist>
              <arg name="Fourth-inlet" type="signal" />
          </arglist>
          <digest>
              FF coefficient 2
          </digest>
          <description>
              The fourth inlet takes the 2nd FF coefficient (this can be generated using <o>filtercoeff~</o>).
          </description>
      </method>
      <method name="Fifth-inlet">
          <arglist>
              <arg name="Fifth-inlet" type="signal" />
          </arglist>
          <digest>
              FB coefficient 1
          </digest>
          <description>
              The fifth inlet takes the 1st FB coefficient (this can be generated using <o>filtercoeff~</o>).
          </description>
      </method>
      <method name="Sixth-inlet">
          <arglist>
              <arg name="Sixth-inlet" type="signal" />
          </arglist>
          <digest>
              FB coefficient 2
          </digest>
          <description>
              The sixth inlet takes the 2nd FB coefficient (this can be generated using <o>filtercoeff~</o>).
          </description>
      </method>
      <method name="Seventh-inlet">
          <arglist>
              <arg name="Seventh-inlet" type="signal" />
          </arglist>
          <digest>
              Reset input
          </digest>
          <description>
              The seventh inlet takes a trigger <m>signal</m> used to clear the filters memory. In granular applications with filtering per voice this allows correct reset of the filter before each new grain.
          </description>
      </method>
  </methodlist>
  <attributelist>
  </attributelist>
  <misc name="Output">
    <entry name="signal">
        <description>
            Outputs a filtered audio signal.
        </description>
    </entry>
  </misc>
  <seealsolist>
    <seealso name="chebyshape~" />
    <seealso name="rdcblock~" />
    <seealso name="triggerlimit~" />
    <seealso name="tsah~" />
    <seealso name="voicedrive~" />
    <seealso name="voicemanager~" />
  </seealsolist>
  <misc name="Discussion">
    <entry name="Keywords">
      <description>sample accurate suite</description>
    </entry>
  </misc>
</c74object>
